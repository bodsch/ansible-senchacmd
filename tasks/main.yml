---

- name: install dependencies
  ansible.builtin.package:
    name: unzip
    state: present

- name: check for installed sencha
  ansible.builtin.stat:
    path: "{{ sencha_home_directory }}/{{ sencha_version }}/sencha.vmoptions"
  register: _installed_sencha

- name: install sencha
  when:
    - not _installed_sencha.stat.exists
  block:
    - name: create deployment temporary directory
      ansible.builtin.file:
        path: "{{ sencha_deployment_tmp_directory }}"
        state: directory
        mode: 0750

    - name: create local temporary directory
      become: false
      ansible.builtin.file:
        path: "{{ sencha_local_tmp_directory }}"
        state: directory
        mode: 0750
      delegate_to: localhost

    - name: download sencha archive to local folder
      become: false
      ansible.builtin.get_url:
        url: "{{ sencha_download_url }}"
        dest: "{{ sencha_local_tmp_directory }}/{{ sencha_file_name }}"
        mode: 0640
      register: _download_artefact
      until: _download_artefact is succeeded
      retries: 5
      delay: 0
      delegate_to: localhost
      check_mode: false

    - name: deploy {{ sencha_file_name }} to destination system
      ansible.builtin.copy:
        src: "{{ sencha_local_tmp_directory }}/{{ sencha_file_name }}"
        dest: "{{ sencha_deployment_tmp_directory }}"
        mode: 0640

    - name: unarchive {{ sencha_file_name }}
      ansible.builtin.unarchive:
        src: '{{ sencha_deployment_tmp_directory }}/{{ sencha_file_name }}'
        dest: /tmp
        copy: false
        mode: 0740

    - name: install SenchaCmd into {{ sencha_home_directory }}/{{ sencha_version }}
      ansible.builtin.shell: |
        cd /tmp
        mv SenchaCmd-*.sh SenchaCmd.sh
        sed -i 's|which |command -v |g' SenchaCmd.sh
        bash ./SenchaCmd.sh -q -dir {{ sencha_home_directory }}/{{ sencha_version }}
        rm -f SenchaCmd*
        chmod -R 0755 {{ sencha_home_directory }}
      register: _install_result
      changed_when: _install_result.rc != 0
      failed_when: _install_result.rc != 0

    - name: 'show install failure information'
      ansible.builtin.debug:
        msg: "{{ _install_result.stdout_lines }}"
      when: _install_result

    - name: 'set install state | true'
      ansible.builtin.set_fact:
        coremedia_build_state: true
      when: _install_result is succeeded

    - name: 'set install state | false'
      ansible.builtin.set_fact:
        coremedia_build_state: false
      when: _install_result is failed

    - name: 'show install failure information'
      ansible.builtin.debug:
        msg: "{{ _install_result.stdout_lines }}"
      when: _install_result is failed


- name: insert custom profile script to define PATH variables
  ansible.builtin.template:
    src: profile.d/sencha.sh.j2
    dest: /etc/profile.d/sencha.sh
    owner: root
    group: root
    mode: 0755

- name: write sencha.vmoptions
  ansible.builtin.template:
    src: sencha.vmoptions.j2
    dest: "{{ sencha_home_directory }}/{{ sencha_version }}/sencha.vmoptions"
    mode: 0644

- name: cleaning up
  ansible.builtin.file:
    state: absent
    path: '{{ sencha_deployment_tmp_directory }}'
  when: sencha_cleanup
